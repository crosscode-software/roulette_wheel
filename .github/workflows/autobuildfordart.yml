# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: roulette wheel selection

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      my_secret: ${{secrets.rws_accesstoken}}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v1
        with:
          channel: 'dev'  
      - run: flutter config --enable-web
      - run: flutter pub get
      - run: |
          cd example
          # flutter build web --release
          flutter build web --web-renderer html
          # flutter build web
      - run: |
          cd example/build/web
          git init
          # type configurations: your user.email and user.name followed lines 
          git config --global user.email crosscode.co.ltd@gmail.com
          git config --global user.name crosscode-software
          
          git status
          git remote add origin https://${{secrets.rws_accesstoken}}@github.com/crosscode-software/roulette_wheel_selection.git
          git checkout -b gh-pages
          git add --all
          git commit -m "update"
          git push origin gh-pages -f
          
      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      #- uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      #- name: Install dependencies
      #  run: dart pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      #- name: Analyze project source
      #  run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      #- name: Run tests
      #  run: dart test
